{"ast":null,"code":"var _jsxFileName = \"/Users/baby/Desktop/web Dev/food-app-new/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from \"./AvailableMeals.module.css\";\nimport MealItem from \"./MealItem\"; // const DUMMY_MEALS = [\n//   {\n//     id: \"m1\",\n//     name: \"Sushi\",\n//     description: \"Finest fish and veggies\",\n//     price: 22.99,\n//   },\n//   {\n//     id: \"m2\",\n//     name: \"Schnitzel\",\n//     description: \"A german specialty!\",\n//     price: 16.5,\n//   },\n//   {\n//     id: \"m3\",\n//     name: \"Barbecue Burger\",\n//     description: \"American, raw, meaty\",\n//     price: 12.99,\n//   },\n//   {\n//     id: \"m4\",\n//     name: \"Green Bowl\",\n//     description: \"Healthy...and green...\",\n//     price: 18.99,\n//   },\n// ];\n//below we use the default get request using the REST api endpoint provided by firebase\n//a useEffect should not return anything other than cleanup function therefore async await not used directly\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch(\"https://food-app-4b937-default-rtdb.firebaseio.com/meals.json\"); //error handling below using catch with promise cant use try catch in Effect\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []); //no dependencies above indicates that the useEffect will only run  initially when the component is loaded\n  //never after that\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.mealsLoading,\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 12\n  }, this);\n  if (httpError) return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.MealsError,\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: httpError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this);\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: mealsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"6pndJp/WWpMtmhSnoCH9k0tFnXc=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["useEffect","useState","Card","classes","MealItem","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","error","message","mealsLoading","MealsError","mealsList","map","meal"],"sources":["/Users/baby/Desktop/web Dev/food-app-new/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from \"./AvailableMeals.module.css\";\nimport MealItem from \"./MealItem\";\n// const DUMMY_MEALS = [\n//   {\n//     id: \"m1\",\n//     name: \"Sushi\",\n//     description: \"Finest fish and veggies\",\n//     price: 22.99,\n//   },\n//   {\n//     id: \"m2\",\n//     name: \"Schnitzel\",\n//     description: \"A german specialty!\",\n//     price: 16.5,\n//   },\n//   {\n//     id: \"m3\",\n//     name: \"Barbecue Burger\",\n//     description: \"American, raw, meaty\",\n//     price: 12.99,\n//   },\n//   {\n//     id: \"m4\",\n//     name: \"Green Bowl\",\n//     description: \"Healthy...and green...\",\n//     price: 18.99,\n//   },\n// ];\n//below we use the default get request using the REST api endpoint provided by firebase\n//a useEffect should not return anything other than cleanup function therefore async await not used directly\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch(\n        \"https://food-app-4b937-default-rtdb.firebaseio.com/meals.json\"\n      );\n      //error handling below using catch with promise cant use try catch in Effect\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price,\n        });\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch((error) => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n  //no dependencies above indicates that the useEffect will only run  initially when the component is loaded\n  //never after that\n  if (isLoading)\n    return <section className={classes.mealsLoading}>Loading...</section>;\n\n  if (httpError)\n    return (\n      <section className={classes.MealsError}>\n        <p>{httpError}</p>\n      </section>\n    );\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      id={meal.id}\n      key={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n  return (\n    <section className={classes.meals}>\n      <Card>{mealsList}</Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,cAAc,GAAG,MAAM;EAAA;;EAC3B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,EAA1C;EACAD,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAG,YAAY;MAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+DAD0B,CAA5B,CAD6B,CAI7B;;MACA,IAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;MACD;;MAED,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;MACA,MAAMC,WAAW,GAAG,EAApB;;MACA,KAAK,MAAMC,GAAX,IAAkBH,YAAlB,EAAgC;QAC9BE,WAAW,CAACE,IAAZ,CAAiB;UACfC,EAAE,EAAEF,GADW;UAEfG,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFT;UAGfC,WAAW,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHhB;UAIfC,KAAK,EAAER,YAAY,CAACG,GAAD,CAAZ,CAAkBK;QAJV,CAAjB;MAMD;;MACDlB,QAAQ,CAACY,WAAD,CAAR;MACAV,YAAY,CAAC,KAAD,CAAZ;IACD,CArBD;;IAuBAG,UAAU,GAAGc,KAAb,CAAoBC,KAAD,IAAW;MAC5BlB,YAAY,CAAC,KAAD,CAAZ;MACAE,YAAY,CAACgB,KAAK,CAACC,OAAP,CAAZ;IACD,CAHD;EAID,CA5BQ,EA4BN,EA5BM,CAAT,CAJ2B,CAiC3B;EACA;;EACA,IAAIpB,SAAJ,EACE,oBAAO;IAAS,SAAS,EAAEL,OAAO,CAAC0B,YAA5B;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EAEF,IAAInB,SAAJ,EACE,oBACE;IAAS,SAAS,EAAEP,OAAO,CAAC2B,UAA5B;IAAA,uBACE;MAAA,UAAIpB;IAAJ;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;EAMF,MAAMqB,SAAS,GAAGzB,KAAK,CAAC0B,GAAN,CAAWC,IAAD,iBAC1B,QAAC,QAAD;IACE,EAAE,EAAEA,IAAI,CAACX,EADX;IAGE,IAAI,EAAEW,IAAI,CAACV,IAHb;IAIE,WAAW,EAAEU,IAAI,CAACT,WAJpB;IAKE,KAAK,EAAES,IAAI,CAACR;EALd,GAEOQ,IAAI,CAACX,EAFZ;IAAA;IAAA;IAAA;EAAA,QADgB,CAAlB;EASA,oBACE;IAAS,SAAS,EAAEnB,OAAO,CAACG,KAA5B;IAAA,uBACE,QAAC,IAAD;MAAA,UAAOyB;IAAP;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA3DD;;GAAM1B,c;;KAAAA,c;AA6DN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}