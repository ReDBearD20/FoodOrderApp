{"ast":null,"code":"var _jsxFileName = \"/Users/baby/Desktop/web Dev/food-app-new/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isFiveChars = value => value.trim().length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  //we are using this useRef to get the read input in our checkout form\n  //we can record input on every keystroke or useRef\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    postal: true,\n    city: true\n  });\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalIsValid = isFiveChars(enteredPostal);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      postal: enteredPostalIsValid,\n      city: enteredCityIsValid\n    });\n    const formIsValid = enteredStreetIsValid && enteredNameIsValid && enteredCityIsValid && enteredPostalIsValid;\n\n    if (!formIsValid) {\n      return;\n    } //sending data to cart.js component via props\n\n\n    props.onSubmit({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postal: enteredPostal\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.name ? \"\" : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.name ? \"\" : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.name ? \"\" : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), !formInputsValidity.postal && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a 5 digit postal code!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.name ? \"\" : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), !formInputsValidity && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: classes.submit,\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"sljOAyIdUCq2ScAGk7PhQmyD1/4=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useRef","useState","classes","isEmpty","value","trim","isFiveChars","length","Checkout","props","nameInputRef","streetInputRef","postalInputRef","cityInputRef","formInputsValidity","setFormInputsValidity","name","street","postal","city","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalIsValid","formIsValid","onSubmit","form","control","invalid","actions","submit","onCancel"],"sources":["/Users/baby/Desktop/web Dev/food-app-new/src/components/Cart/Checkout.js"],"sourcesContent":["import { useRef } from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nimport classes from \"./Checkout.module.css\";\n\nconst isEmpty = (value) => value.trim() === \"\";\n\nconst isFiveChars = (value) => value.trim().length === 5;\n\nconst Checkout = (props) => {\n  //we are using this useRef to get the read input in our checkout form\n  //we can record input on every keystroke or useRef\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    postal: true,\n    city: true,\n  });\n  const confirmHandler = (event) => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalIsValid = isFiveChars(enteredPostal);\n\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      postal: enteredPostalIsValid,\n      city: enteredCityIsValid,\n    });\n\n    const formIsValid =\n      enteredStreetIsValid &&\n      enteredNameIsValid &&\n      enteredCityIsValid &&\n      enteredPostalIsValid;\n    if (!formIsValid) {\n      return;\n    }\n    //sending data to cart.js component via props\n    props.onSubmit({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postal: enteredPostal,\n    });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div\n        className={`${classes.control} ${\n          formInputsValidity.name ? \"\" : classes.invalid\n        }`}\n      >\n        <label htmlFor=\"name\">Your Name</label>\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\n        {!formInputsValidity.name && <p>Please enter a valid name!</p>}\n      </div>\n      <div\n        className={`${classes.control} ${\n          formInputsValidity.name ? \"\" : classes.invalid\n        }`}\n      >\n        <label htmlFor=\"street\">Street</label>\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\n        {!formInputsValidity.street && <p>Please enter a valid street!</p>}\n      </div>\n      <div\n        className={`${classes.control} ${\n          formInputsValidity.name ? \"\" : classes.invalid\n        }`}\n      >\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input type=\"text\" id=\"postal\" ref={postalInputRef} />\n        {!formInputsValidity.postal && (\n          <p>Please enter a 5 digit postal code!</p>\n        )}\n      </div>\n      <div\n        className={`${classes.control} ${\n          formInputsValidity.name ? \"\" : classes.invalid\n        }`}\n      >\n        <label htmlFor=\"city\">City</label>\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\n        {!formInputsValidity && <p>Please enter a valid city!</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type=\"submit\">Confirm</button>\n        <button\n          type=\"button\"\n          className={classes.submit}\n          onClick={props.onCancel}\n        >\n          Cancel\n        </button>\n      </div>\n    </form>\n  );\n};\nexport default Checkout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}